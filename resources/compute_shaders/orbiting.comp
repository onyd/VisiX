#version 430 core

layout( local_size_x = 32 ) in; 
 
uniform float dt; 

uniform float r0 = 2.0;
uniform float a = 0.3;
uniform float b = 0.5;
uniform float c = -0.5;

#define PI 3.1415926535897932384626433832795

layout(std430, binding=0) buffer Pos { 
  vec4 Position[]; 
}; 

float atan2(in float y, in float x)
{
    bool s = (abs(x) > abs(y));
    return mix(PI/2.0 - atan(x,y), atan(y,x), s);
}

vec3 spheric(vec3 v) {
	float r = length(v);
	return vec3(r, acos(v.z / r), atan2(v.y, v.x));
}

vec3 cartesian(vec3 v) {
	return vec3(v.x * sin(v.y) * cos(v.z), v.x * sin(v.y) * sin(v.z), v.x * cos(v.y));
}
 
void main() { 
	uint idx = gl_GlobalInvocationID.x; 
	
	vec3 p = spheric(Position[idx].xyz);

	float r = p.x; 
	float theta = p.y; 
	float phi = p.z; 

	vec3 v = vec3(a*pow((r0-r), 3), cos(phi), sin(theta));

	float h = 0.1 * dt;
  
	Position[idx] = vec4(cartesian(p + h * v), 1.0);  
} 

#version 430 core

layout( local_size_x = 32 ) in; 
 
uniform float dt; 

uniform float sigma = 10.0;
uniform float rho = 28.0;
uniform float beta = 8.0 / 3.0;

struct Particle {
  vec4 pos;
  vec4 vel; 
};

layout(std430, binding=0) buffer Particles { 
  Particle p[]; 
}; 
 
void main() { 
  uint idx = gl_GlobalInvocationID.x; 
 
  float x = p[idx].pos.x; 
  float y = p[idx].pos.y; 
  float z = p[idx].pos.z; 
  vec4 v = vec4(sigma*(y-x), x*(rho-z)-y, x*y-beta*z, 0.0);

  float h = 0.1 * dt;
  
  p[idx].pos = p[idx].pos + h * v;  
} 
